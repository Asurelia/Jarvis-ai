# üîí Configuration Nginx Production S√©curis√©e JARVIS
# Reverse proxy avec SSL/TLS, headers de s√©curit√© et rate limiting

user nginx;
worker_processes auto;
error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

# √âv√©nements et connexions
events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    # Configuration de base
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging s√©curis√©
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # Performance et s√©curit√©
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 16M;
    
    # Masquer la version Nginx
    server_tokens off;
    
    # Configuration SSL/TLS globale
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Headers de s√©curit√© globaux
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;
    
    # Upstream backend services
    upstream brain_api {
        least_conn;
        server brain-api:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream frontend_app {
        server frontend:3000 max_fails=2 fail_timeout=30s;
        keepalive 16;
    }
    
    upstream tts_service {
        server tts-service:5002 max_fails=2 fail_timeout=30s;
        keepalive 8;
    }
    
    upstream stt_service {
        server stt-service:5003 max_fails=2 fail_timeout=30s;
        keepalive 8;
    }
    
    # Redirection HTTP vers HTTPS
    server {
        listen 80;
        server_name _;
        
        # Acme challenge pour Let's Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # Redirection vers HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # Configuration HTTPS principale
    server {
        listen 443 ssl http2;
        server_name ${CERTBOT_DOMAIN};
        
        # Certificats SSL
        ssl_certificate /etc/ssl/certs/live/${CERTBOT_DOMAIN}/fullchain.pem;
        ssl_certificate_key /etc/ssl/certs/live/${CERTBOT_DOMAIN}/privkey.pem;
        
        # Headers de s√©curit√© HTTPS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; connect-src 'self' wss: ws:; font-src 'self'; media-src 'self'; object-src 'none'; frame-ancestors 'none';" always;
        
        # Rate limiting g√©n√©ral
        limit_req zone=general burst=50 nodelay;
        
        # Frontend React
        location / {
            proxy_pass http://frontend_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Cache pour les assets statiques
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                proxy_pass http://frontend_app;
                proxy_cache_valid 200 1d;
                add_header Cache-Control "public, max-age=86400";
            }
        }
        
        # API Brain - Rate limiting strict
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://brain_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 30s;
            
            # Pas de cache pour les API
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
        
        # WebSocket pour communication temps r√©el
        location /ws {
            proxy_pass http://brain_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts plus longs pour WebSocket
            proxy_connect_timeout 10s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        # Service TTS
        location /tts/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://tts_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Streaming support
            proxy_buffering off;
            proxy_cache off;
        }
        
        # Service STT
        location /stt/ {
            limit_req zone=api burst=15 nodelay;
            
            proxy_pass http://stt_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Upload support pour audio
            client_max_body_size 50M;
        }
        
        # Authentification - Rate limiting tr√®s strict
        location /auth/ {
            limit_req zone=auth burst=3 nodelay;
            
            proxy_pass http://brain_api/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Pas de cache pour l'authentification
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
        
        # Health check
        location /health {
            proxy_pass http://brain_api/health;
            access_log off;
        }
        
        # Monitoring (optionnel, acc√®s restreint)
        location /metrics {
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            proxy_pass http://brain_api/metrics;
        }
        
        # Grafana (optionnel)
        location /grafana/ {
            # Authentification requise ici
            auth_basic "JARVIS Monitoring";
            auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://grafana:3001/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Bloquer l'acc√®s aux fichiers sensibles
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ \.(sql|log|conf)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # Configuration pour IP directe (rejeter)
    server {
        listen 443 ssl http2 default_server;
        server_name _;
        
        ssl_certificate /etc/ssl/certs/selfsigned.crt;
        ssl_certificate_key /etc/ssl/certs/selfsigned.key;
        
        return 444;  # Fermer la connexion sans r√©ponse
    }
}