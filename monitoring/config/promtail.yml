# üì¶ JARVIS AI 2025 - Configuration Promtail
# Agent de collecte de logs pour tous les services

server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Logs des services JARVIS dans le dossier logs/
  - job_name: jarvis-services
    static_configs:
      - targets:
          - localhost
        labels:
          job: jarvis-services
          __path__: /var/log/jarvis/*.log
    
    pipeline_stages:
      # Parse des logs structur√©s JSON
      - json:
          expressions:
            timestamp: timestamp
            level: level
            service: service
            message: message
            request_id: request_id
            user_id: user_id
      
      # √âtiquetage dynamique
      - labels:
          service:
          level:
          request_id:
      
      # Filtrage des logs sensibles
      - drop:
          expression: '.*password.*|.*secret.*|.*token.*'
          older_than: 24h
      
      # Timestamps
      - timestamp:
          source: timestamp
          format: RFC3339

  # Logs sp√©cifiques Brain API
  - job_name: brain-api-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: brain-api
          service: brain-api
          __path__: /var/log/jarvis/brain-api*.log
    
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            persona: persona
            conversation_id: conversation_id
            ai_model: ai_model
            response_time: response_time
            message: message
      
      - labels:
          persona:
          level:
          ai_model:
      
      - timestamp:
          source: timestamp
          format: RFC3339

  # Logs TTS Service avec m√©triques de performance
  - job_name: tts-service-logs  
    static_configs:
      - targets:
          - localhost
        labels:
          job: tts-service
          service: tts-service
          __path__: /var/log/jarvis/tts*.log
    
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            voice_model: voice_model
            synthesis_time: synthesis_time
            audio_duration: audio_duration
            language: language
            message: message
      
      - labels:
          voice_model:
          level:
          language:
      
      - timestamp:
          source: timestamp
          format: RFC3339

  # Logs STT Service
  - job_name: stt-service-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: stt-service
          service: stt-service
          __path__: /var/log/jarvis/stt*.log
    
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            model: model
            language: language
            audio_duration: audio_duration
            transcription_time: transcription_time
            message: message
      
      - labels:
          model:
          level:
          language:

  # Logs GPU Stats avec m√©triques hardware
  - job_name: gpu-stats-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: gpu-stats
          service: gpu-stats-service
          __path__: /var/log/jarvis/gpu*.log
    
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            gpu_id: gpu_id
            utilization: utilization
            memory_used: memory_used
            temperature: temperature
            message: message
      
      - labels:
          gpu_id:
          level:

  # Logs System Control avec monitoring s√©curit√©
  - job_name: system-control-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: system-control
          service: system-control
          __path__: /var/log/jarvis/system-control*.log
    
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            action_type: action_type
            user_id: user_id
            security_level: security_level
            message: message
      
      - labels:
          action_type:
          level:
          security_level:
      
      # Alertes de s√©curit√© sp√©ciales
      - match:
          selector: '{level="ERROR"}'
          stages:
            - labels:
                alert_type: security_violation

  # Logs Docker containers
  - job_name: docker-containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["logging=promtail"]
    
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)' 
        target_label: 'container_name'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
      - source_labels: ['__meta_docker_container_label_logging_jobname']
        target_label: 'job'

    pipeline_stages:
      - cri: {}
      - json:
          expressions:
            level: level
            timestamp: timestamp
            message: message
      - labels:
          level:
          logstream:
      - timestamp:
          source: timestamp
          format: RFC3339

  # Logs syst√®me (syslog)
  - job_name: syslog
    syslog:
      listen_address: 0.0.0.0:1514
      label_structured_data: true
      labels:
        job: "syslog"
    
    relabel_configs:
      - source_labels: ['__syslog_message_hostname']
        target_label: 'host'
      - source_labels: ['__syslog_message_app_name']
        target_label: 'app'
    
    pipeline_stages:
      - json:
          expressions:
            level: level
            facility: facility
      - labels:
          level:
          facility:

  # Logs erreurs applications
  - job_name: error-logs
    static_configs:
      - targets:
          - localhost  
        labels:
          job: errors
          __path__: /var/log/jarvis/*error*.log
    
    pipeline_stages:
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2}'
          max_wait_time: 3s
      
      - json:
          expressions:
            timestamp: timestamp
            level: level
            service: service
            error_type: error_type
            stack_trace: stack_trace
            message: message
      
      - labels:
          level:
          service:
          error_type:
      
      # √âchantillonnage des erreurs r√©p√©titives
      - drop:
          expression: '.*Connection refused.*'
          older_than: 5m
          drop_counter_reason: "connection_error_sampling"