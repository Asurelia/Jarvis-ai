#!/bin/bash

# üîç JARVIS AI 2025 - D√©marrage du syst√®me de monitoring complet
# Script Unix/Linux pour lancer Prometheus, Grafana, Alertmanager, Loki et Jaeger

set -e

echo ""
echo "==============================================="
echo "ü§ñ JARVIS AI 2025 - Monitoring Stack"
echo "==============================================="
echo ""

# Fonction pour logger
log() {
    echo "[$(date +'%Y-%m-%d %H:%M:%S')] $1"
}

# V√©rification Docker
log "‚è≥ V√©rification de Docker..."
if ! command -v docker &> /dev/null; then
    log "‚ùå Docker n'est pas install√©"
    log "Veuillez installer Docker: https://docs.docker.com/get-docker/"
    exit 1
fi
log "‚úÖ Docker trouv√©: $(docker --version)"

# V√©rification docker-compose
log "‚è≥ V√©rification de Docker Compose..."
if ! command -v docker-compose &> /dev/null; then
    log "‚ùå Docker Compose n'est pas install√©"
    log "Veuillez installer Docker Compose: https://docs.docker.com/compose/install/"
    exit 1
fi
log "‚úÖ Docker Compose trouv√©: $(docker-compose --version)"

# Cr√©ation des r√©pertoires de donn√©es
log "‚è≥ Cr√©ation des r√©pertoires de donn√©es..."
mkdir -p monitoring/data/{prometheus,grafana,alertmanager,loki,jaeger}

# Configuration des permissions
log "‚è≥ Configuration des permissions..."
chmod -R 755 monitoring/data/
chown -R 472:472 monitoring/data/grafana/ 2>/dev/null || true  # Grafana user
chown -R 65534:65534 monitoring/data/prometheus/ 2>/dev/null || true  # Nobody user
chown -R 65534:65534 monitoring/data/alertmanager/ 2>/dev/null || true
chown -R 10001:10001 monitoring/data/loki/ 2>/dev/null || true
chown -R 10001:10001 monitoring/data/jaeger/ 2>/dev/null || true

# Variables d'environnement par d√©faut
export GRAFANA_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-"jarvis2025!"}
export REDIS_PASSWORD=${REDIS_PASSWORD:-"jarvis_redis_2025!"}
export POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-"jarvis_db_2025!"}

# Configuration des alertes (optionnel)
export SMTP_HOST=${SMTP_HOST:-"smtp.gmail.com:587"}
export TEAM_EMAIL=${TEAM_EMAIL:-"admin@localhost"}
export SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-""}

echo ""
log "üöÄ D√©marrage de la stack de monitoring..."
echo ""

# Arr√™t des services existants
log "‚è≥ Arr√™t des services de monitoring existants..."
docker-compose -f docker-compose.monitoring.yml down -v 2>/dev/null || true

# D√©marrage des services de monitoring
log "‚è≥ D√©marrage des services de monitoring..."
docker-compose -f docker-compose.monitoring.yml up -d

if [ $? -ne 0 ]; then
    log "‚ùå Erreur lors du d√©marrage des services de monitoring"
    log "V√©rifiez les logs avec: docker-compose -f docker-compose.monitoring.yml logs"
    exit 1
fi

echo ""
log "‚è≥ Attente du d√©marrage des services (30 secondes)..."
sleep 30

echo ""
log "‚úÖ Stack de monitoring JARVIS d√©marr√©e avec succ√®s!"
echo ""
echo "üìä Acc√®s aux services:"
echo "   ‚Ä¢ Grafana:      http://localhost:3001 (admin/jarvis2025!)"
echo "   ‚Ä¢ Prometheus:   http://localhost:9090"
echo "   ‚Ä¢ AlertManager: http://localhost:9093"
echo "   ‚Ä¢ Jaeger:       http://localhost:16686"
echo ""
echo "üìà Dashboards Grafana disponibles:"
echo "   ‚Ä¢ JARVIS Overview: http://localhost:3001/d/jarvis-overview"
echo "   ‚Ä¢ AI Services:     http://localhost:3001/d/jarvis-ai-services"
echo "   ‚Ä¢ GPU Monitoring:  http://localhost:3001/d/jarvis-gpu"
echo "   ‚Ä¢ Infrastructure:  http://localhost:3001/d/jarvis-infra"
echo ""
echo "üîç Pour voir les logs: docker-compose -f docker-compose.monitoring.yml logs -f"
echo "üîÑ Pour red√©marrer:   docker-compose -f docker-compose.monitoring.yml restart"
echo "üõë Pour arr√™ter:      docker-compose -f docker-compose.monitoring.yml down"
echo ""

# V√©rification sant√© des services
log "‚è≥ V√©rification de la sant√© des services..."
sleep 10

echo ""
echo "Service Status:"
docker-compose -f docker-compose.monitoring.yml ps

# Test de connectivit√©
echo ""
log "üîç Test de connectivit√© des services..."

# Test Prometheus
if curl -s http://localhost:9090/-/healthy > /dev/null; then
    log "‚úÖ Prometheus: Healthy"
else
    log "‚ö†Ô∏è Prometheus: Not responding"
fi

# Test Grafana
if curl -s http://localhost:3001/api/health > /dev/null; then
    log "‚úÖ Grafana: Healthy"
else
    log "‚ö†Ô∏è Grafana: Not responding"
fi

# Test AlertManager
if curl -s http://localhost:9093/-/healthy > /dev/null; then
    log "‚úÖ AlertManager: Healthy"
else
    log "‚ö†Ô∏è AlertManager: Not responding"
fi

echo ""
log "üéâ Syst√®me de monitoring JARVIS AI pr√™t!"
log "   Consultez Grafana pour visualiser vos m√©triques"
echo ""

# Affichage des m√©triques initiales
log "üìä M√©triques initiales disponibles:"
echo ""
curl -s http://localhost:9090/api/v1/label/__name__/values | jq -r '.data[]' | grep jarvis | head -10 2>/dev/null || echo "   (M√©triques en cours de collecte...)"

echo ""
log "‚ú® Monitoring JARVIS AI configur√© avec succ√®s!"